{
  "permissions": {
    "allow": [
      "Bash(bun:*)",
      "Bash(grep:*)",
      "Bash(git commit:*)",
      "Bash(mkdir:*)",
      "mcp__MCP_DOCKER__browser_navigate",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(claude mcp test scopecraft-command-mcp)",
      "Bash(claude mcp get:*)",
      "Bash(jq:*)",
      "mcp__scopecraft-command-mcp__task_list",
      "mcp__scopecraft-command-mcp__task_create",
      "mcp__scopecraft-command-mcp__task_get",
      "mcp__scopecraft-command-mcp__task_update",
      "mcp__scopecraft-command-mcp__task_next",
      "mcp__scopecraft-command-mcp__phase_list",
      "mcp__scopecraft-command-mcp__workflow_current",
      "mcp__scopecraft-command-mcp__task_delete",
      "mcp__scopecraft-command-mcp__phase_create",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Bash(cat:*)",
      "mcp__scopecraft-cmd__task_update",
      "mcp__scopecraft-cmd__task_get",
      "mcp__scopecraft-cmd__task_create",
      "mcp__scopecraft-cmd__task_list",
      "mcp__scopecraft-cmd__task_next",
      "Bash(npm run install:local:*)",
      "Bash(sed:*)",
      "mcp__scopecraft-cmd__phase_list",
      "Bash(npm create:*)",
      "Bash(git merge:*)",
      "Bash(git worktree:*)",
      "Bash(npm run build:*)",
      "Bash(git pull:*)",
      "Bash(npm run publish:local:*)",
      "Bash(sc template:*)",
      "Bash(sc phase:*)",
      "mcp__scopecraft-cmd__feature_list",
      "mcp__scopecraft-cmd__phase_create",
      "mcp__scopecraft-cmd__task_move",
      "mcp__scopecraft-cmd__feature_create",
      "mcp__scopecraft-cmd__workflow_current",
      "mcp__scopecraft-cmd__area_list",
      "mcp__scopecraft-cmd__task_delete",
      "mcp__scopecraft-cmd__area_create",
      "Bash(node:*)",
      "Bash(sc task create:*)",
      "Bash(sc list:*)",
      "Bash(sc task get:*)",
      "Bash(sc:*)",
      "Bash(git checkout:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install)",
      "Bash(biome check:*)",
      "Bash(npx biome:*)",
      "Bash(true)",
      "Bash(test:*)",
      "Bash(npm run format:fix:*)",
      "Bash(npx sc:*)",
      "Bash(chmod:*)",
      "Bash(fish:*)",
      "mcp__scopecraft-cmd__feature_update",
      "mcp__scopecraft-cmd__feature_get",
      "Bash(git describe:*)",
      "Bash(git tag:*)",
      "Bash(rm:*)",
      "Bash(echo:*)",
      "Bash(git rm:*)",
      "Bash(./test/run-root-dir-e2e.sh:*)",
      "Bash(realpath:*)",
      "Bash(/project:05_implement typescript FEAT-FIXPATH-0519-JY)",
      "Bash(bash:*)",
      "Bash(npm test:*)",
      "Bash(awk:*)",
      "Bash(tsc:*)",
      "Bash(npx --package=@scopecraft/cmd scopecraft-stdio:*)",
      "Bash(npm install:*)",
      "Bash(npm version:*)",
      "mcp__scopecraft-cmd__phase_update",
      "mcp__scopecraft-cmd__phase_delete",
      "mcp__scopecraft-cmd__area_update",
      "Bash(rg:*)",
      "Bash(claude -p \"Hello, what is today's date?\" --output-format stream-json)",
      "Bash(claude -p \"Hello, what is today's date?\" --output-format stream-json --verbose)",
      "Bash(bun run:*)",
      "Bash(grep:*)",
      "Bash(claude:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(scopecraft:*)",
      "mcp__scopecraft-cmd__feature_get",
      "mcp__scopecraft-cmd__task_get",
      "Bash(/project:05_implement ui FEAT-CREATEWORKTREEDASHBOARD-0520-ZB)",
      "Bash(bun run:*)",
      "Bash(find:*)",
      "Bash(bun npx biome check:*)",
      "Bash(npx biome check:*)",
      "Bash(npx tsc:*)",
      "Bash(git add:*)",
      "mcp__scopecraft-cmd__task_update",
      "mcp__scopecraft-cmd__task_list",
      "Bash(http GET:*)",
      "Bash(cp:*)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg \"title[\\\"\\\" ]*:\" --include=\"*.ts\" src/)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg \"tool\\\\(\" -A 1 -B 1 src/mcp/core-server.ts)",
      "Bash(find:*)",
      "WebFetch(domain:github.com)",
      "mcp__scopecraft-cmd__task_get",
      "Bash(mkdir:*)",
      "mcp__scopecraft-cmd__task_update",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(bun run:*)",
      "Bash(./test-claude-permissions.sh:*)",
      "Bash(git init:*)",
      "Bash(touch:*)",
      "mcp__scopecraft__task_list",
      "mcp__scopecraft__phase_list",
      "mcp__scopecraft__task_create",
      "mcp__scopecraft__task_get",
      "mcp__scopecraft__feature_get",
      "mcp__scopecraft__task_update",
      "Bash(../dist/cli/cli.js init)",
      "Bash(../dist/cli/cli.js task create --title \"My first v2 task\" --type feature)",
      "Bash(../dist/cli/cli.js task create --title \"Test v2 task creation\" --type feature)",
      "Bash(../dist/cli/cli.js task list)",
      "Bash(../dist/cli/cli.js task list --current)",
      "Bash(../dist/cli/cli.js task list --backlog)",
      "Bash(../dist/cli/cli.js task start test-v2-task-creation-0528-8P)",
      "Bash(../dist/cli/cli.js task update test-v2-task-creation-0528-8P --title \"Updated title for v2 task\")",
      "Bash(../dist/cli/cli.js task update test-v2-task-creation-0528-8P --assignee \"david\")",
      "Bash(./dist/cli/cli.js task list --current)",
      "Bash(../node_modules/.bin/sc parent create --title \"User Authentication System\" --type feature)",
      "Bash(../dist/cli/cli.js parent create --title \"User Authentication System\" --type feature)",
      "Bash(../dist/cli/cli.js parent list)",
      "Bash(../dist/cli/cli.js parent add-subtask user-authentication-system-0528-6J --title \"Design login form UI\")",
      "Bash(../dist/cli/cli.js parent get user-authentication-system-0528-6J)",
      "Bash(../dist/cli/cli.js parent show user-authentication-system-0528-6J)",
      "Bash(../dist/cli/cli.js parent show user-authentication-system-0528-6J --tree)",
      "Bash(../dist/cli/cli.js parent add-subtask user-authentication-system-0528-6J --title \"Implement backend API\")",
      "Bash(../dist/cli/cli.js parent add-subtask user-authentication-system-0528-6J --title \"Create database schema\")",
      "Bash(./dist/cli/cli.js parent show test-v2-parent --tree)",
      "Bash(./dist/cli/cli.js parent list)",
      "Bash(./dist/cli/cli.js parent show implement-v2-structure --tree)",
      "Bash(./dist/cli/cli.js task create --title \"Test promotion task\" --type feature)",
      "Bash(channelcoder:*)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 20 -B 5 \"updateTaskStatus|setTaskStatus\" src/core/v2/task-crud.ts)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 10 -B 2 \"status.*=\" src/core/v2/task-crud.ts)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 30 -B 5 \"export.*function updateTask\" src/core/v2/task-crud.ts)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 15 -B 5 \"\\.command\\('start'\\)|\\.command\\('complete'\\)|\\.command\\('block'\\)\" src/cli/entity-commands-v2.ts)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 15 -B 5 \"start.*action|complete.*action|block.*action\" src/cli/entity-commands-v2.ts)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 10 -B 3 \"'start'|'complete'|'block'\" src/cli/entity-commands-v2.ts)",
      "Bash(/opt/homebrew/Cellar/ripgrep/14.1.1/bin/rg -A 20 -B 5 \"interface V2Config\" src/core/v2/types.ts)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(npx storybook@latest init:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}